@page "/"
@using Microsoft.EntityFrameworkCore
@using Models;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity;
@inject IServiceProvider _serviceProvider;
@inject UserManager<Data.ApplicationUser> UserManager
@inject SignInManager<Data.ApplicationUser> SignInManager

@attribute [Authorize(Policy = "AuthenticatedUser")]
<PageTitle>Home</PageTitle>

<AuthorizeView>
    <Authorized>
        <p>Cpr nummer</p>
        <input placeholder="Cpr" @bind="cpr.CprNr" />
        <button @onclick="AddCprToDb">Submit</button>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <p class="text-danger">@errorMessage</p>
        }

        @if (isCprValid)
        {
            <div>
                <h3>Add To-Do Item</h3>
                <p>Item</p>
                <input placeholder="Item" @bind="todoItem.Item" />
                <button @onclick="AddTodoToDb">Submit To-Do</button>
            </div>
        }
    </Authorized>
</AuthorizeView>

<AuthorizeView Roles="admin">
    <Authorized>
        <p>You are admin!</p>
    </Authorized>
</AuthorizeView>

@code {
    private Cpr cpr = new Cpr();
    private TodoList todoItem = new TodoList();
    private string? errorMessage;
    private bool isCprValid = false;

    public async Task AddCprToDb()
    {
        if (!string.IsNullOrEmpty(cpr.User))
        {
            var dbContext = _serviceProvider.GetRequiredService<ToDoDataContext>();
            var existingCpr = await dbContext.Cprs.FirstOrDefaultAsync(x => x.User == cpr.User);

            if (existingCpr != null)
            {
                if (existingCpr.CprNr != cpr.CprNr)
                {
                    errorMessage = "Not the correct CPR number.";
                    isCprValid = false;
                    return;
                }

                isCprValid = true;
                todoItem.UserId = existingCpr.Cprid;
                errorMessage = null;
            }
            else
            {
                errorMessage = "CPR number not found.";
                isCprValid = false;
            }
        }
    }

    public async Task AddTodoToDb()
    {
        if (isCprValid && todoItem.UserId != null)
        {
            var dbContext = _serviceProvider.GetRequiredService<ToDoDataContext>();
            dbContext.TodoLists.Add(todoItem);
            await dbContext.SaveChangesAsync();

            todoItem = new TodoList();
            errorMessage = "To-Do item added successfully!";
        }
        else
        {
            errorMessage = "You must validate your CPR number first.";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var user = await UserManager.GetUserAsync(SignInManager.Context.User);
        if (user != null)
        {
            cpr.User = user.Email;
        }
    }
}
